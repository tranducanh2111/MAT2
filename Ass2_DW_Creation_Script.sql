-- TASK 1.1
-- Drop the table if it exists to avoid errors on rerun
DROP TABLE A2ERROREVENT CASCADE CONSTRAINTS;

-- Drop the sequence if it exists
DROP SEQUENCE A2ERROREVENT_SEQ;

-- Create the table as per the provided schema
CREATE TABLE A2ERROREVENT (
    ERRORID INTEGER,
    SOURCE_ROWID ROWID,
    SOURCE_TABLE VARCHAR2(30),
    ERRORCODE INTEGER,
    FILTERID INTEGER,
    DATETIME DATE,
    ACTION VARCHAR2(6),
    CONSTRAINT ERROREVENTACTION CHECK (ACTION IN ('SKIP','MODIFY'))
);

-- Create a sequence to for A2ERROREVENT table
CREATE SEQUENCE A2ERROREVENT_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- Commit the transaction to save changes
-- COMMIT;

-- TASK 1.2
-- Drop Tables if they exist
DROP TABLE DWPROD CASCADE CONSTRAINTS;
DROP TABLE DWCUST CASCADE CONSTRAINTS;
DROP TABLE DWSALE CASCADE CONSTRAINTS;

-- Drop Sequences if they exist
DROP SEQUENCE DWPROD_SEQ;
DROP SEQUENCE DWCUST_SEQ;
DROP SEQUENCE DWSALE_SEQ;

-- Create Sequence for DWPROD
CREATE SEQUENCE DWPROD_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- Create Sequence for DWCUST
CREATE SEQUENCE DWCUST_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- Create Sequence for DWSALE
CREATE SEQUENCE DWSALE_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- Create DWPROD Table
CREATE TABLE DWPROD (
    DWPRODID        INTEGER,
    DWSOURCETABLE   VARCHAR2(30),
    DWSOURCEID      INTEGER,
    PRODNAME        VARCHAR2(100),
    PRODCATNAME     VARCHAR2(30),
    PRODMANUNAME    VARCHAR2(30),
    PRODSHIPNAME    VARCHAR2(30)
);

-- Create DWCUST Table
CREATE TABLE DWCUST (
    DWCUSTID        INTEGER,
    DWSOURCEIDBRIS  INTEGER,
    DWSOURCEIDMELB  INTEGER,
    FIRSTNAME       VARCHAR2(30),
    SURNAME         VARCHAR2(30),
    GENDER          VARCHAR2(10),
    PHONE           VARCHAR2(20),
    POSTCODE        NUMBER(4),
    CITY            VARCHAR2(50),
    STATE           VARCHAR2(10),
    CUSTCATNAME     VARCHAR2(30)
);

-- Create DWSALE Table
CREATE TABLE DWSALE (
    DWSALEID        INTEGER,
    DWCUSTID        INTEGER,
    DWPRODID        INTEGER,
    DWSOURCEIDBRIS  INTEGER,
    DWSOURCEIDMELB  INTEGER,
    SALEDATE        DATE,
    SHIPDATE        DATE,
    QTY             NUMBER(2),
    UNITPRICE       NUMBER(7, 2)
);
-- Considering if the constraint within the dwsale is needed or not

-- TASK 1.3
-- Create GENDERSPELLING Table
DROP TABLE GENDERSPELLING;

CREATE TABLE GENDERSPELLING (
    INVALID_VALUE VARCHAR2(20) PRIMARY KEY,
    NEW_VALUE CHAR(1)
);

-- Insert data into GENDERSPELLING Table
INSERT INTO GENDERSPELLING (INVALID_VALUE, NEW_VALUE) VALUES ('MAIL', 'M');
INSERT INTO GENDERSPELLING (INVALID_VALUE, NEW_VALUE) VALUES ('WOMAN', 'F');
INSERT INTO GENDERSPELLING (INVALID_VALUE, NEW_VALUE) VALUES ('FEM', 'F');
INSERT INTO GENDERSPELLING (INVALID_VALUE, NEW_VALUE) VALUES ('FEMALE', 'F');
INSERT INTO GENDERSPELLING (INVALID_VALUE, NEW_VALUE) VALUES ('MALE', 'M');
INSERT INTO GENDERSPELLING (INVALID_VALUE, NEW_VALUE) VALUES ('GENTLEMAN', 'M');
INSERT INTO GENDERSPELLING (INVALID_VALUE, NEW_VALUE) VALUES ('MM', 'M');
INSERT INTO GENDERSPELLING (INVALID_VALUE, NEW_VALUE) VALUES ('FF', 'F');
INSERT INTO GENDERSPELLING (INVALID_VALUE, NEW_VALUE) VALUES ('FEMAIL', 'F');

-- PART 2
-- TASK 2.1
INSERT INTO A2ERROREVENT (ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL,ROWID,'A2PRODUCT',116,1,SYSDATE,'SKIP'
FROM A2PRODUCT
WHERE PRODNAME IS NULL;

-- Check if the A2ERROREVENT table was updated correctly
SELECT *
FROM A2ERROREVENT
WHERE SOURCE_TABLE = 'A2PRODUCT'
AND ERRORCODE = 116
AND ACTION = 'SKIP';

-- Count rows have NULL product names in A2PRODUCT
SELECT COUNT(*)
FROM A2PRODUCT
WHERE PRODNAME IS NULL;

-- Count rows in A2ERROREVENT to ensure the same amount of error rows are returned
SELECT COUNT(*)
FROM A2ERROREVENT
WHERE SOURCE_TABLE = 'A2PRODUCT'
AND ERRORCODE = 116
AND ACTION = 'SKIP';

-- TASK 2.2
INSERT INTO A2ERROREVENT (ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL,ROWID,'A2PRODUCT',129,2,SYSDATE,'MODIFY'
FROM A2PRODUCT
WHERE MANUFACTURERCODE IS NULL;

-- Count rows in A2Product having NULL manufacturer codes
SELECT COUNT(*)
FROM A2PRODUCT
WHERE MANUFACTURERCODE IS NULL;

-- Count rows in Ass2ErrorEvent to ensure the exact number is returned
SELECT COUNT(*)
FROM A2ERROREVENT
WHERE SOURCE_TABLE = 'A2PRODUCT'
AND ERRORCODE = 129
AND ACTION = 'MODIFY';

-- TASK 2.3
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL,ROWID,'A2PRODUCT',141,3,SYSDATE,'MODIFY'
FROM A2PRODUCT p
WHERE P.PRODCATEGORY IS NULL
OR P.PRODCATEGORY NOT IN (
    SELECT PRODUCTCATEGORY FROM A2PRODCATEGORY
);

-- TASK 2.4
--SELECT ROWID
--FROM A2Product p
--WHERE P.ROWID NOT IN (SELECT E.SOURCE_ROWID FROM A2ERROREVENT E WHERE E.SOURCE_TABLE = 'A2PRODUCT');

-- TASK 2.4.2
--SELECT P.PRODID,P.PRODNAME,PC.CATEGORYNAME AS ProductCategory,M.MANUNAME AS ManufacturerName,S.DESCRIPTION AS ShippingDescription
--FROM A2PRODUCT P
--JOIN A2PRODCATEGORY PC ON P.PRODCATEGORY = PC.PRODUCTCATEGORY
--JOIN A2MANUFACTURER M ON P.MANUFACTURERCODE = M.MANUCODE
--JOIN A2SHIPPING S ON P.SHIPPINGCODE = S.SHIPPINGCODE
--WHERE P.ROWID NOT IN (SELECT E.SOURCE_ROWID FROM A2ERROREVENT E WHERE E.SOURCE_TABLE = 'A2PRODUCT');

-- TASK 2.4.3
INSERT INTO DWPROD (DWPRODID, DWSOURCETABLE, DWSOURCEID, PRODNAME, PRODCATNAME, PRODMANUNAME, PRODSHIPNAME)
SELECT DWPROD_SEQ.NEXTVAL, 'A2PRODUCT', PRODID, PRODNAME, CATEGORYNAME, MANUNAME, DESCRIPTION
FROM A2PRODUCT P
NATURAL JOIN A2MANUFACTURER M, A2SHIPPING S, A2PRODCATEGORY PC
WHERE P.ROWID NOT IN (
    SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE
)
AND M.MANUCODE = P.MANUFACTURERCODE
AND PC.PRODUCTCATEGORY = P.PRODCATEGORY
AND S.SHIPPINGCODE = P.SHIPPINGCODE;

-- TASK 2.4.4
INSERT INTO DWPROD
SELECT 
    DWPROD_SEQ.NEXTVAL,
    'A2PRODUCT',
    P.PRODID,
    P.PRODNAME, 
    PC.CATEGORYNAME, 
    'UNKNOWN',
    S.DESCRIPTION
FROM A2PRODUCT P
NATURAL JOIN A2PRODCATEGORY PC, A2SHIPPING S
WHERE P.ROWID IN (
    SELECT EE.SOURCE_ROWID
    FROM A2ERROREVENT EE 
    WHERE EE.FILTERID = 2
)
AND PC.PRODUCTCATEGORY = P.PRODCATEGORY
AND S.SHIPPINGCODE = P.SHIPPINGCODE;

-- TASK 2.4.5
INSERT INTO DWPROD
SELECT DWPROD_SEQ.NEXTVAL, 'A2PRODUCT', PRODID, PRODNAME, 'UNKNOWN', MANUNAME, DESCRIPTION
FROM A2PRODUCT P
NATURAL JOIN A2MANUFACTURER M, A2SHIPPING S
WHERE P.ROWID IN (
    SELECT EE.SOURCE_ROWID
    FROM A2ERROREVENT EE
    WHERE EE.FILTERID = 3
)
AND M.MANUCODE = P.MANUFACTURERCODE
AND S.SHIPPINGCODE = P.SHIPPINGCODE;
